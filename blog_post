# ðŸš€ My First Game Development Project: Space Invaders

## Introduction

Hello everyone! I'm excited to share my first-ever game development project: a simple Space Invaders game built using Python and Pygame. This project was part of my learning process in game development and version control. In this blog post, I'll take you through the steps I followed, the challenges I faced, and what I learned along the way.

## Why Space Invaders?

When I first started thinking about creating a game, I wanted something simple yet fun. Space Invaders seemed like the perfect choice because it has straightforward mechanics, but there's still a lot to learn from implementing it. Plus, who doesn't love a good old-fashioned shoot-'em-up game?

## Getting Started with Pygame

Iâ€™ll be honestâ€”Pygame was completely new to me. I knew Python, but I had never used it for game development before. Getting started with Pygame involved a lot of Googling and watching YouTube tutorials. At first, it was overwhelming with all the different functions and methods, but once I got the hang of it, it became really fun to see the game start to take shape.

## Implementing the Game

1. **Setting Up the Game Window:** I started by setting up the basic game window and adding a background.
2. **Player Movement:** Worked on the playerâ€™s movement to make it smooth.
3. **Adding Enemies:** Implemented enemy movement and patterns.
4. **Shooting Mechanism:** Developed the shooting mechanism for the player.

## Challenges Faced

### Learning Pygame from Scratch

- **Challenge:** Understanding Pygameâ€™s functions and methods.
- **Solution:** Watched YouTube tutorials and read documentation.

### Getting the Player to Move Smoothly

- **Challenge:** Smooth left/right movement of the spaceship.
- **Solution:** Adjusted speed and ensured movement only when keys are pressed.

### Shooting Bullets

- **Challenge:** Bullets firing properly and only when "ready."
- **Solution:** Used a state system to track bullet readiness.

### Checking for Collisions

- **Challenge:** Accurate collision detection between bullets and enemies.
- **Solution:** Used distance calculations based on the Pythagorean theorem.

### Game Over and Restart

- **Challenge:** Displaying the game-over screen and handling restarts.
- **Solution:** Added a game-over screen and restart functionality using user input loops.

### Other Challenges

- **Starting from Zero with Pygame:** Had to start from scratch with Pygame and sought help online.
- **Documenting Everything:** Learned to keep track of problems and solutions.
- **Using GitHub and Version Control:** First-time use of GitHub and version control for project management.

## How to Play

- **Move Left/Right:** Use the left and right arrow keys to move the spaceship.
- **Fire Bullet:** Press the spacebar to shoot the enemies.
- **Game Over:** If the enemies get too close, you lose!
- **Restart:** Press 'R' to restart the game after you lose.

## What I Plan to Do Next

- **Add More Levels:** Plan to add additional levels with tougher enemies.
- **Power-Ups:** Introduce power-ups to enhance gameplay.
- **Better AI:** Improve enemy intelligence and challenge.

## Thanks To

- **YouTube Tutorials:** For providing valuable guidance.
- **Pygame Community:** For the resources and support that helped me understand Pygame.

## Links

- [GitHub Repository](https://github.com/gen5115/Space-Invaders)
- [YouTube Tutorial for Space Invaders Game](https://youtu.be/FfWpgLFMI7w?si=M1dauOt6gl6Y5odJ)

---


